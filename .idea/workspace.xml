<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d4187502-7018-44c5-98ed-172b600af810" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/database.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/config/db.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/model/controllers/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.eslintrc.cjs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.prettierrc.json" beforeDir="false" afterPath="$PROJECT_DIR$/.prettierrc.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/notarize.js" beforeDir="false" afterPath="$PROJECT_DIR$/build/notarize.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/electron-builder.yml" beforeDir="false" afterPath="$PROJECT_DIR$/electron-builder.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/electron.vite.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/electron.vite.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/employees_schedule.sql" beforeDir="false" afterPath="$PROJECT_DIR$/employees_schedule.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/typeorm.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/providers/ErrorBoundary/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/providers/ErrorBoundary/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/providers/ErrorBoundary/ui/ErrorBoundary.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/providers/ErrorBoundary/ui/ErrorBoundary.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/config/StateSchema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/config/StateSchema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/config/reducerManager.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/config/reducerManager.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/config/store.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/config/store.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/ui/StoreProvider.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/providers/StoreProvider/ui/StoreProvider.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/app/types/global.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/app/types/global.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/shared/api/axios.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/shared/api/axios.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/shared/lib/classNames/classNames.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/shared/lib/classNames/classNames.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/shared/store/buildSelector.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/shared/store/buildSelector.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/shared/store/buildSlice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/shared/store/buildSlice.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/shared/store/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/shared/store/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/shared/ui/Button/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/shared/ui/Button/ui/Button.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/shared/ui/Button/ui/Button.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/widgets/PageError/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/widgets/PageError/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/renderer/src/widgets/PageError/ui/PageError.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/src/widgets/PageError/ui/PageError.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.node.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.node.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2JDNaThEinukZa67t4W1hV6jS5q" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="compactDirectories" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Programming/projects/bigraf&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;C:\\Programming\\projects\\bigraf\\node_modules\\prettier&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;settings.javascript.prettier&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Programming\\projects\\bigraf\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Programming\projects\electron-vite\src\renderer\src\widgets\PageError" />
      <recent name="C:\Programming\projects\electron-vite\src\renderer\src\shared\lib\classNames" />
      <recent name="C:\Programming\projects\electron-vite\src\renderer\src\shared" />
      <recent name="C:\Programming\projects\electron-vite\src\renderer\src\app" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d4187502-7018-44c5-98ed-172b600af810" name="Changes" comment="" />
      <created>1671608756470</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1671608756470</updated>
      <workItem from="1671608757883" duration="20504000" />
      <workItem from="1674480585493" duration="16921000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>